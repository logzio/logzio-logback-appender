name: Java CI with Maven
on:
  push:
    branches: [ master ]
    tags:
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Install dependencies
      run: ./mvnw install -DskipTests -Dgpg.skip

    - name: Install on branch
      run: echo "Install on branch $GITHUB_REF"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master' && startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Decode signing key
      run: |
        openssl aes-256-cbc -in release/codesigning.asc.enc -out release/codesigning.asc -d -k ${{ secrets.CODESIGNING }}
        gpg --fast-import release/codesigning.asc
        rm release/codesigning.asc

    - name: Set version
      run: ./mvnw versions:set -DnewVersion=${GITHUB_REF/refs\/tags\//}

    - name: Deploy with Maven
      run: ./mvnw deploy --settings release/settings.xml

    - name: Deployment status
      run: echo 'Deployed finished successfully'
